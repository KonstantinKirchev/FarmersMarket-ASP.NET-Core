@model IPagedList<ProductViewModel>

@{
    ViewData["Title"] = "Products";
}

<div class="container">
    <div class="row">
        <div id="productToCart">The product was successfully added to your shopping cart</div>
        <h1 class="page-header">@ViewData["Title"]</h1>
         <div class="form-group">
            <div class="row height d-flex justify-content-center align-items-center">
                <div class="col-md-8">
                    <form asp-controller="Products" asp-action="Search" class="search" method="GET" role = "search"> 
                        <i class="fa fa-search"></i> 
                        <input id="product" name="product" type="text" class="form-control" placeholder="Search by product name" value="@(ViewBag.currentFilter as string)" /> 
                        <button type="submit" value="Search" class="btn btn-primary">Search</button> 
                    </form>
                </div>
            </div>
        </div>
        </div>
        @Html.DisplayFor(product => product)
    </div>
    @if (Model.PageCount > 1)
    {
        @Html.PagedListPager(Model, page => Url.Action("Search", new { page, currentFilter = ViewBag.CurrentFilter }),
            new PagedListRenderOptions {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 3
            }
        )
    }
</div>

@section Scripts
{
    <script type="text/javascript">
        $(document)
        .ready(function () {
            var message = document.getElementById('productToCart');
            message.style.display = 'none';
            $(document).on("click",".add", () => {
                    console.log(1);
                    message.classList.add("alert");
                    message.classList.add("alert-success");
                    message.style.display = 'block';
                    setTimeout(function() {
                        message.classList.remove("alert");
                        message.classList.remove("alert-success");
                        message.style.display = 'none';
                    }, 1000);
                });
        });
    </script>
}